server.port=0

spring.datasource.url=jdbc:postgresql://${HOST}:${PORT}/${NAME}
spring.datasource.username=${USER}
spring.datasource.password=${PASS}
spring.datasource.driver-class-name=org.postgresql.Driver

spring.jpa.generate-ddl=false
spring.jpa.show-sql=true
spring.jpa.properties.hibernate.format_sql=false
spring.jpa.properties.hibernate.hbm2ddl.auto=none

spring.kafka.bootstrap-servers=${KAFKA_HOST}:${KAFKA_PORT}
spring.kafka.producer.client-id=alerts-group
spring.kafka.consumer.auto-offset-reset=earliest
spring.kafka.template.default-topic=alerts

springdoc.api-docs.enabled=true
springdoc.api-docs.path=/api-docs

resilience4j.circuitbreaker.instances.walletServiceBreaker.slidingWindowSize=10
resilience4j.circuitbreaker.instances.walletServiceBreaker.permittedNumberOfCallsInHalfOpenState=3
resilience4j.circuitbreaker.instances.walletServiceBreaker.slidingWindowType=TIME_BASED
resilience4j.circuitbreaker.instances.walletServiceBreaker.minimumNumberOfCalls=10
resilience4j.circuitbreaker.instances.walletServiceBreaker.waitDurationInOpenState=10s
resilience4j.circuitbreaker.instances.walletServiceBreaker.failureRateThreshold=50

management.endpoints.web.exposure.include=*